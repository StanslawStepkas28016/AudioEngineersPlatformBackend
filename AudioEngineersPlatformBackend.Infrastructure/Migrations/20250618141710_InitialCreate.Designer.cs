// <auto-generated />
using System;
using AudioEngineersPlatformBackend.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AudioEngineersPlatformBackend.Infrastructure.Migrations
{
    [DbContext(typeof(EngineersPlatformDbContext))]
    [Migration("20250618141710_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AudioEngineersPlatformBackend.Domain.Entities.Advert", b =>
                {
                    b.Property<Guid>("IdAdvert")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CoverImageKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdAdvertCategory")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdAdvertLog")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PortfolioUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAdvert")
                        .HasName("PK_Advert");

                    b.HasIndex("IdAdvertCategory");

                    b.HasIndex("IdAdvertLog");

                    b.HasIndex("IdUser");

                    b.ToTable("Advert", (string)null);
                });

            modelBuilder.Entity("AudioEngineersPlatformBackend.Domain.Entities.AdvertCategory", b =>
                {
                    b.Property<Guid>("IdAdvertCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAdvertCategory")
                        .HasName("PK_AdvertCategory");

                    b.ToTable("AdvertCategory", (string)null);

                    b.HasData(
                        new
                        {
                            IdAdvertCategory = new Guid("13e214e4-7eca-4237-8d67-295590d348fa"),
                            CategoryName = "Mixing"
                        },
                        new
                        {
                            IdAdvertCategory = new Guid("cb05eb29-16ee-44a0-b35b-c8c33f326589"),
                            CategoryName = "Mastering"
                        },
                        new
                        {
                            IdAdvertCategory = new Guid("c2d9e584-1380-4826-ab92-0061fe88074c"),
                            CategoryName = "Production"
                        });
                });

            modelBuilder.Entity("AudioEngineersPlatformBackend.Domain.Entities.AdvertLog", b =>
                {
                    b.Property<Guid>("IdAdvertLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("IdAdvertLog")
                        .HasName("PK_AdvertLog");

                    b.ToTable("AdvertLog", (string)null);
                });

            modelBuilder.Entity("AudioEngineersPlatformBackend.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRole")
                        .HasName("PK_Role");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            IdRole = new Guid("6564407b-cb51-42f2-b399-a1c25328f156"),
                            RoleName = "Administrator"
                        },
                        new
                        {
                            IdRole = new Guid("4b80dfb0-d3c3-4188-a67e-32f3c3d88635"),
                            RoleName = "Client"
                        },
                        new
                        {
                            IdRole = new Guid("2517c538-a4e6-48ac-86f4-948b068fa197"),
                            RoleName = "Audio engineer"
                        });
                });

            modelBuilder.Entity("AudioEngineersPlatformBackend.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdRole")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUserLog")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUser")
                        .HasName("PK_User");

                    b.HasIndex("IdRole");

                    b.HasIndex("IdUserLog");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            IdUser = new Guid("3f4fd287-be8c-4b9c-a47d-de0d2311de8d"),
                            Email = "dominik.kow@gmail.com",
                            FirstName = "Dominik",
                            IdRole = new Guid("6564407b-cb51-42f2-b399-a1c25328f156"),
                            IdUserLog = new Guid("d75cdc18-793b-4aba-8e7f-87c4362469b4"),
                            LastName = "Kowalski",
                            Password = "AQAAAAIAAYagAAAAEHwqXHYDVB5J6I27jS861k8QSpE7pfUpset7kQsfyGpZqlFBd5VF1RJHU/uK/pbQPA==",
                            PhoneNumber = "+48123456789"
                        },
                        new
                        {
                            IdUser = new Guid("3c0f422d-0d47-40cb-8585-5ab6e776928a"),
                            Email = "jan.nowak@gmail.com",
                            FirstName = "Jan",
                            IdRole = new Guid("4b80dfb0-d3c3-4188-a67e-32f3c3d88635"),
                            IdUserLog = new Guid("dc9862b8-b7dc-4062-8e2c-14c972e9205b"),
                            LastName = "Nowak",
                            Password = "AQAAAAIAAYagAAAAEHcCWmnz5Op3yVRtGZCT4tMaNStTk17PaLwkWWWQ1c62v0S/Cq+Fmfbu5Cu9kfrC5w==",
                            PhoneNumber = "+48696432123"
                        },
                        new
                        {
                            IdUser = new Guid("efe2d4fc-27b0-40e9-a3c2-f9721e71356c"),
                            Email = "anna.kow@gmail.com",
                            FirstName = "Anna",
                            IdRole = new Guid("2517c538-a4e6-48ac-86f4-948b068fa197"),
                            IdUserLog = new Guid("8e00b20f-059b-447d-a203-89d984e4f300"),
                            LastName = "Kowalska",
                            Password = "AQAAAAIAAYagAAAAENzHsf7H/lBxfSUz0TjzrwCFOchEXKE/T2pfbiV396DprKf9L6VYihtdm7KavMEz7w==",
                            PhoneNumber = "+48543123123"
                        });
                });

            modelBuilder.Entity("AudioEngineersPlatformBackend.Domain.Entities.UserLog", b =>
                {
                    b.Property<Guid>("IdUserLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLastLogin")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExp")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerificationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerificationCodeExpiration")
                        .HasColumnType("datetime2");

                    b.HasKey("IdUserLog")
                        .HasName("PK_UserLog");

                    b.ToTable("UserLog", (string)null);

                    b.HasData(
                        new
                        {
                            IdUserLog = new Guid("d75cdc18-793b-4aba-8e7f-87c4362469b4"),
                            DateCreated = new DateTime(2025, 6, 18, 14, 17, 10, 247, DateTimeKind.Utc).AddTicks(7510),
                            IsDeleted = false,
                            IsVerified = true
                        },
                        new
                        {
                            IdUserLog = new Guid("dc9862b8-b7dc-4062-8e2c-14c972e9205b"),
                            DateCreated = new DateTime(2025, 6, 18, 14, 17, 10, 317, DateTimeKind.Utc).AddTicks(8320),
                            IsDeleted = false,
                            IsVerified = true
                        },
                        new
                        {
                            IdUserLog = new Guid("8e00b20f-059b-447d-a203-89d984e4f300"),
                            DateCreated = new DateTime(2025, 6, 18, 14, 17, 10, 351, DateTimeKind.Utc).AddTicks(4010),
                            IsDeleted = false,
                            IsVerified = true
                        });
                });

            modelBuilder.Entity("AudioEngineersPlatformBackend.Domain.Entities.Advert", b =>
                {
                    b.HasOne("AudioEngineersPlatformBackend.Domain.Entities.AdvertCategory", "AdvertCategory")
                        .WithMany("Adverts")
                        .HasForeignKey("IdAdvertCategory")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Advert_AdvertCategory");

                    b.HasOne("AudioEngineersPlatformBackend.Domain.Entities.AdvertLog", "AdvertLog")
                        .WithMany("Adverts")
                        .HasForeignKey("IdAdvertLog")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Advert_AdvertLog");

                    b.HasOne("AudioEngineersPlatformBackend.Domain.Entities.User", "User")
                        .WithMany("Adverts")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Advert_User");

                    b.Navigation("AdvertCategory");

                    b.Navigation("AdvertLog");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AudioEngineersPlatformBackend.Domain.Entities.User", b =>
                {
                    b.HasOne("AudioEngineersPlatformBackend.Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_User_Role");

                    b.HasOne("AudioEngineersPlatformBackend.Domain.Entities.UserLog", "UserLog")
                        .WithMany("Users")
                        .HasForeignKey("IdUserLog")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_User_UserLog");

                    b.Navigation("Role");

                    b.Navigation("UserLog");
                });

            modelBuilder.Entity("AudioEngineersPlatformBackend.Domain.Entities.AdvertCategory", b =>
                {
                    b.Navigation("Adverts");
                });

            modelBuilder.Entity("AudioEngineersPlatformBackend.Domain.Entities.AdvertLog", b =>
                {
                    b.Navigation("Adverts");
                });

            modelBuilder.Entity("AudioEngineersPlatformBackend.Domain.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("AudioEngineersPlatformBackend.Domain.Entities.User", b =>
                {
                    b.Navigation("Adverts");
                });

            modelBuilder.Entity("AudioEngineersPlatformBackend.Domain.Entities.UserLog", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
